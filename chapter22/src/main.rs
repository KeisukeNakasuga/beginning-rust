fn main() {
    println!("22.2 ===================");
    // 所有権
    // Box → ヒープオブジェクトを割り当てる
    // _num → スタックオブジェクトを割り当て
    let _num = Box::new(3);

    let a = 3;
    {
        let _a_ref = &a;
    } // ブロックを出るタイミングで_a_refの割り当ては解除される
    println!("{}", a);

    println!("22.3 ===================");
    // ベクターの内容を入れるバッファをヒープに割り当て
    // バッファに3個の整数をコピー
    // v1のヘッダをスタックに割り当てる
    let v1 = vec![11, 22, 33];
    #[allow(unused_variables)]
    // v2のヘッダをスタックに割り当てる
    // v1を使ってv2のヘッダを初期化
    // v1がv2に代入されるタイミングでv1は存在しなくなる(使用できなくなる)
    // コンパイル時に「borrow of moved value: `v1`」
    // let v2 = v1.copy();

    // コピーのセマンティクスを利用すればOK
    let v2 = v1.clone();
    println!("{}", v1.len());
}
